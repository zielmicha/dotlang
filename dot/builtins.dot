
.func-inc def { .var arg
    var. call 1 add var. set
}

.func-dec def { .var arg
    var. call 1 sub var. set
}

.func-dotimes def { .times .func arg
    .(times. 0 ge) while {
         func. call
         .times dec
    }
}

# todo: vararg
.func-partial def { .arg0 .func arg
    .(arg0. func. call)
}

.func-iternext def { .iter arg
    iter. call next (.item .iternext listref) set
    iternext. iter. set
    item.
}

.func-swap def { .a .b arg
    a. call .tmp set
    b. call a. set
    tmp. b. set
}
