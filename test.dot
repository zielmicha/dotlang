# This is Hello World program in Dotlang
"Hello world!" print

.foobar print
1 2 add print

"print 1" func-print. call
1 .foo set
foo. print

(1 2 add) print

.("lambda" print) .func-my set
my

.func-a def {
    "that was printed by func-a" print
    "func-a result"
}
1 2 a print

1000 .counter set
.(counter. 0 neq) while {
    counter. 1 sub .counter set
}

.func-greeter def { .name arg
    "hello" name. print
}

"Micha≈Ç" greeter

0 .foo set
.func-test def { arg
    1 .foo set
}
test
foo. 0 eq assert
1 0 neq assert
#func-test. @env @parents print
#0 | 1 2 list print
func-test. @env | .(@parents) .(@data) list multi
