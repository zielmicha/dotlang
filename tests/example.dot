#!/usr/bin/env dotlang
.func-printhelloworld def { arg
    "hello world" print
}

.func-mergesort def { .seq arg
    seq. len 1 eq if { seq. } {
       seq. len 2 intdiv .split set
       0 split. seq. slice mergesort .a set
       split. seq. slice mergesort .b set
      a. b. merge .tmp set
	   tmp.
    }
}

.func-merge def { .a .b arg
    list .out set
    .( a. b. and ) while {
        a. first | b. first gt if {
            .a .b swap
        }
        .a iternext out. push
    }
    a. out. extend
    b. out. extend
    out.
}

# something like pop macro

1 3 2 1 2 3 4 4 0 0 list mergesort (
  0 0 1 1 2 2 3 3 4 4 list) eq assert
